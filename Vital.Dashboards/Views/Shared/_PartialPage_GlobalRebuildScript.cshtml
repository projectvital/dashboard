@*
    Project VITAL.Dashboard
    Copyright (C) 2017 - Universiteit Hasselt
    This project has been funded with support from the European Commission (Project number: 2015-BE02-KA203-012317). 

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*@

<script>
    var GlobalRebuildFunctions = [];
    function rebuildCharts(queueCallback) {
        var queue_globalRebuildCharts = d3.queue();
        
        for (i = 0 ; i < GlobalRebuildFunctions.length ; i++) {
            queue_globalRebuildCharts.defer(GlobalRebuildFunctions[i]);
            //GlobalRebuildFunctions[i](queueCallback);
        }
        queue_globalRebuildCharts.awaitAll(function (error) {
            //console.log('#rebuildCharts queue completed');
            if (queueCallback) queueCallback(null);
        });
    }

    var GlobalRebuildDataFunctions = [];
    function rebuildData(queueCallback) {

        var queue_globalRebuildData = d3.queue();
        for (i = 0 ; i < GlobalRebuildDataFunctions.length ; i++) {
            queue_globalRebuildData.defer(GlobalRebuildDataFunctions[i]);
            //GlobalRebuildDataFunctions[i](queueCallback);
        }
        queue_globalRebuildData.awaitAll(function (error) {
            //console.log('#rebuildData queue completed');

            if (Cookies && document.getElementById("x_studentSelect")) {
                if (document.getElementById("x_studentSelect").options.length == 2 && Cookies.get("user-id") > 0)//Actual user
                {
                    $('#x_studentSelect').val(Cookies.get("user-id")).change();
                    //document.getElementById("x_studentSelect").selectedIndex = 1;//Auto select the student
                }
            }
            
            if (queueCallback) queueCallback(null);
        });
        //rebuildCharts();
        
    }
    function rebuildData_OLD(queueCallback) {
        //console.log('#rebuildData start');
        for (i = 0 ; i < GlobalRebuildDataFunctions.length ; i++) {
            GlobalRebuildDataFunctions[i](queueCallback);
        }
        //rebuildCharts();
        //console.log('#rebuildData end');
    }
</script>